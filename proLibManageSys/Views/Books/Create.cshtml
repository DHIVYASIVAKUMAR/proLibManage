       @model proLibManageSys.Models.Books

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Books</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.bookName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.bookName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bookName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.authorName, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				  
                 

				@Html.DropDownListFor(model => model.authorName, new SelectList(ViewBag.authorList), "select Author", htmlAttributes: new { @class = "form-control" })

				@*<button onclick="@Model.authorName">Add values in dropdown</button>*@
				@Html.ValidationMessageFor(model => model.authorName, "", new { @class = "text-danger" })
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serialNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.branch, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
                @Html.DropDownListFor(model => model.branch, new SelectList(ViewBag.list),"select Branch",htmlAttributes: new {@class = "form-control" })
				@*@Html.EditorFor(model => model.branch, new { htmlAttributes = new { @class = "form-control" } })*@
				@Html.ValidationMessageFor(model => model.branch, "", new { @class = "text-danger" })
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publications, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownListFor(model => model.publications, new SelectList(ViewBag.publicationsList), "select Publications", htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.publications, "", new { @class = "text-danger" })
			</div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isAvailable, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isAvailable)
                    @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>                                            
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
