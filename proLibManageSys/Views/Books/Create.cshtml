@model proLibManageSys.ViewModels.BooksViewModel
@{
	ViewBag.Title = "Create";
}
<center><h2 style="
    margin-top: 40px;
    padding-left: 35px;
    margin-bottom: 0px;">
	Add New Book
</h2></center>

<link rel=" //cdn.datatables.net/1.10.22/css/jquery.dataTables.min.css" />
<link href="~/Content/bootstrap.min.css" rel="stylesheet" />
<link rel="stylesheet" href="https://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css">
<link href="~/Content/Books/BookIndex.css" rel="stylesheet" />
<link href="~/Content/Books/BookCreate.css" rel="stylesheet" />
<style>
	a,a:hover {
	 color:white;
	}
</style>
<div class="modal fade" id="newAuthorModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Author name</p>
				<input id="newAuthorTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addName()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelName()"> Cancel </a>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="newBranchModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Branch name</p>
				<input id="newBranchTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addBranch()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelBranch()"> Cancel </a>
			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="newPublicationModal">
	<div class="modal-dialog">
		<div class="modal-content">
			<div class="modal-header">
				<h2 class="modal-title">Create</h2>
			</div>
			<div class="modal-body">
				<p>New Publication name</p>
				<input id="newPublicationTextBox" type="text" />
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-default" id="btnOk" style="margin-right:5px" onclick="addPublication()">Add</button>
				<a href="#" id="btnCancel" class="btn btn-primary " onclick="cancelPublication()"> Cancel </a>
			</div>
		</div>
	</div>
</div>

<div id="createFormId">
	@using (Html.BeginForm())
	{
		@Html.AntiForgeryToken()
		<div class="form-horizontal" style="padding-top:50px">
			<hr />
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.book.bookName, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					@Html.EditorFor(model => model.book.bookName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.book.bookName, "", new { @class = "text-danger" })
				</div>
			</div>
			<div class="form-group">
				@Html.LabelFor(model => model.book.authorName, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					<table class="table-borderless">
						<tr>
							<td style="width : 280px">
								@Html.DropDownListFor(model => model.book.authorName, Model.authors.Select(x => new SelectListItem { Text = x.authorName, Value = x.authorName }).ToList(), "select Author", htmlAttributes: new { @class = "form-control" })
							</td>
							<td>
								<button type="button" class="btn btn-outline-primary  wrapper" id="showModal" onclick="NewAuthor()">
									<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
										<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
										<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
									</svg>
								</button>
							</td>
						</tr>
					</table>
					@Html.ValidationMessageFor(model => model.book.authorName, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.book.serialNumber, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					@Html.EditorFor(model => model.book.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.book.serialNumber, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.book.branch, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					<table class="table-borderless">
						<tr>
							<td style="width : 280px">
								@Html.DropDownListFor(model => model.book.branch, Model.bookBranches.Select(x => new SelectListItem { Text = x.branch, Value = x.branch }).ToList(), "select Branch", htmlAttributes: new { @class = "form-control" })
							</td>
							<td>
								<button type="button" class="btn btn-outline-primary  wrapper" id="showModal" onclick=" NewBranch()">
									<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
										<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
										<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
									</svg>
								</button>
							</td>
						</tr>
					</table>
					@Html.ValidationMessageFor(model => model.book.branch, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.book.publications, htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					<table class="table-borderless">
						<tr>
							<td style="width : 280px">
								@Html.DropDownListFor(model => model.book.publications, Model.bookPublications.Select(x => new SelectListItem { Text = x.publications, Value = x.publications }).ToList(), "select Publications", htmlAttributes: new { @class = "form-control" })
							</td>
							<td>
								<button type="button" class="btn btn-outline-primary  wrapper" id="showModal" onclick="NewPublication()">
									<svg width="1em" height="1em" viewBox="0 0 16 16" class="bi bi-file-plus" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
										<path fill-rule="evenodd" d="M4 0h8a2 2 0 0 1 2 2v12a2 2 0 0 1-2 2H4a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm0 1a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h8a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H4z"></path>
										<path fill-rule="evenodd" d="M8 5.5a.5.5 0 0 1 .5.5v1.5H10a.5.5 0 0 1 0 1H8.5V10a.5.5 0 0 1-1 0V8.5H6a.5.5 0 0 1 0-1h1.5V6a.5.5 0 0 1 .5-.5z"></path>
									</svg>
								</button>
							</td>
						</tr>
					</table>
					@Html.ValidationMessageFor(model => model.book.publications, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.book.isAvailable, " Is Available",htmlAttributes: new { @class = "control-label col-md-5" })
				<div class="col-md-7">
					<div class="checkbox">
						@Html.EditorFor(model => model.book.isAvailable)
						@Html.ValidationMessageFor(model => model.book.isAvailable, "", new { @class = "text-danger" })
					</div>
				</div>
			</div>

			<div class="form-group">
				<div class="col-md-offset-6 col-md-7">
					<input type="submit" value="Create" class="btn btn-primary" />
				</div>
			</div>
		</div>
	}
	<div>
		<button class="btn btn-primary">@Html.ActionLink("Back to List", "Index",new { @style = "color:#FFFFFF;" })</button>
	</div>
</div>

@section Scripts {
	<script type="text/javascript" charset="utf8" src="//cdn.datatables.net/1.10.22/js/jquery.dataTables.min.js"></script>
	<script>
		function NewAuthor() {
			$("#newAuthorModal").modal('show');
		}
		function cancelName() {
			$("#newAuthorModal").modal('hide');
		}
        function addName() {
			var newAuthorName = $("#newAuthorTextBox").val();
			$.ajax({
			    type: "POST",
				url: '@Url.Action("AddAuthor")',
				data: { name: newAuthorName },
			    success: function (result) {
				  if (result) {
					  alert(newAuthorName + " added successfully ! ");
					  $("#newAuthorModal").modal('hide');
					  location.reload();
				} else {
					alert("something went wrong");
					}
				}
			});
		}

		function NewBranch() {
			$("#newBranchModal").modal('show');
		}
		function cancelBranch() {
			$("#newBranchModal").modal('hide');
		}
		function addBranch() {
			var newBranchName = $("#newBranchTextBox").val();
			$.ajax({
			    type: "POST",
				url: '@Url.Action("AddBranch")',
				data: { name: newBranchName },
			    success: function (result) {
				  if (result) {
					  alert(newBranchName + " added successfully ! ");
					  $("#newBranchModal").modal('hide');
					  location.reload();
				} else {
					  alert("something went wrong");
					  location.reload();
					}
				}
			});
		}

		function NewPublication() {
			$("#newPublicationModal").modal('show');
		}
		function cancelPublication() {
			$("#newPublicationModal").modal('hide');
		}
		function addPublication() {
			var newPublicationName = $("#newPublicationTextBox").val();
			$.ajax({
			    type: "POST",
				url: '@Url.Action("AddPublication")',
				data: { name: newPublicationName },
			    success: function (result) {
				  if (result) {
					  alert(newPublicationName + " added successfully ! ");
					  $("#newAuthorModal").modal('hide');
					  location.reload();
				} else {
					alert("something went wrong");
					}
				}
			});
		}
	</script>
}
