@model proLibManageSys.Models.Books
@{
    ViewBag.Title = "Edit";
}
<center><h2>Edit Book</h2></center>
<style>
	a, a:hover {
		color: white;
	}
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()    
    <div class="form-horizontal"style="padding-top:50px">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.bookId)

        <div class="form-group">
            @Html.LabelFor(model => model.bookName, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.bookName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.bookName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.authorName, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.authorName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.authorName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.serialNumber, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.serialNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.serialNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.branch, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.branch, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.branch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.publications, htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                @Html.EditorFor(model => model.publications, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.publications, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.isAvailable,"Is Available", htmlAttributes: new { @class = "control-label col-md-5" })
            <div class="col-md-7">
                <div class="checkbox">
                    @Html.EditorFor(model => model.isAvailable)
                    @Html.ValidationMessageFor(model => model.isAvailable, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-5 col-md-7">
                <input type="submit" value="Save" class="btn btn-primary" onclick="return confirm('Edited sucessful !');"/>
            </div>
        </div>
    </div>
}

<div>
	<button class="btn btn-primary">@Html.ActionLink("Back to List", "Index", new { @style = "color:#FFFFFF;" })</button>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
